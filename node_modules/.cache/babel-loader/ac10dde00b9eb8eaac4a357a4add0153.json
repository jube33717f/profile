{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/pro1/profile/src/page/contact/form.js\";\nimport React from 'react';\nimport MyEmail from './email';\nimport { renderEmail } from 'react-html-email';\nimport emailjs from 'emailjs-com'; // const messageHtml =  renderEmail(<MyEmail name={this.state.name} />); \n\nexport default class Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedback: '',\n      name: 'Name',\n      email: '9636332@qq.com'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // const messageHtml =  renderEmail(<MyEmail name={this.state.name} />);     \n      React.createElement(\"form\", {\n        className: \"test-mailing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 4\n        }\n      }, \"renderEmail(\", /*#__PURE__*/React.createElement(MyEmail, {\n        name: this.state.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }), \");\", /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }\n      }, \"Let's see if it works\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        id: \"test-mailing\",\n        name: \"test-mailing\",\n        onChange: this.handleChange,\n        placeholder: \"Post some lorem ipsum here\",\n        required: true,\n        value: this.state.feedback,\n        style: {\n          width: '100%',\n          height: '150px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 8\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Submit\",\n        className: \"btn btn--submit\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }\n      }))\n    );\n  }\n\n  handleChange(event) {\n    this.setState({\n      feedback: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const templateId = 'template_SuPmdfBi';\n    this.sendFeedback(templateId, {\n      message_html: this.state.feedback,\n      from_name: this.state.name,\n      from_email: this.state.email,\n      reply_to: \"jubi33717f@gmail.com\"\n    });\n  }\n\n  sendFeedback(templateId, variables) {\n    const userID = \"user_pMiF80loZQBp2KIqs9Qe9\";\n    var templateParams = {\n      name: 'James',\n      notes: 'Check this out!'\n    };\n    emailjs.send('gmail', templateId, variables, userID).then(res => {\n      console.log('Email successfully sent!');\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n  }\n\n}","map":{"version":3,"sources":["/Users/jubi/fullStack/pro1/profile/src/page/contact/form.js"],"names":["React","MyEmail","renderEmail","emailjs","Form","Component","constructor","props","state","feedback","name","email","handleChange","bind","handleSubmit","render","width","height","event","setState","target","value","templateId","sendFeedback","message_html","from_name","from_email","reply_to","variables","userID","templateParams","notes","send","then","res","console","log","catch","err","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MyEmail from './email'\nimport { renderEmail } from 'react-html-email'\nimport emailjs from 'emailjs-com';\n// const messageHtml =  renderEmail(<MyEmail name={this.state.name} />); \nexport default class Form extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.state = { feedback: '', name: 'Name', email: '9636332@qq.com' };\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n\treturn (\n        // const messageHtml =  renderEmail(<MyEmail name={this.state.name} />);     \n  \t<form className=\"test-mailing\">\n        renderEmail(<MyEmail name={this.state.name} />); \n    \t<h1>Let's see if it works</h1>\n    \t<div>\n      \t<textarea\n        \tid=\"test-mailing\"\n        \tname=\"test-mailing\"\n        \tonChange={this.handleChange}\n        \tplaceholder=\"Post some lorem ipsum here\"\n        \trequired\n        \tvalue={this.state.feedback}\n        \tstyle={{width: '100%', height: '150px'}}\n      \t/>\n    \t</div>\n    \t<input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\n  \t</form>\n\t)\n  }\n  handleChange(event) {\n    this.setState({feedback: event.target.value})\n  }\n\n  handleSubmit (event) {\n\tconst templateId = 'template_SuPmdfBi';\n\n\tthis.sendFeedback(templateId, {message_html: this.state.feedback, from_name: this.state.name, from_email:this.state.email, reply_to: \"jubi33717f@gmail.com\"})\n  }\n\n  sendFeedback (templateId, variables) {\n    const userID= \"user_pMiF80loZQBp2KIqs9Qe9\";\n    var templateParams = {\n        name: 'James',\n        notes: 'Check this out!'\n    };\n\temailjs.send(\n  \t'gmail', templateId,variables,\n  \tuserID\n  \t).then(res => {\n    \tconsole.log('Email successfully sent!')\n  \t})\n  \t// Handle errors here however you like, or use a React error boundary\n  \t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n}"]},"metadata":{},"sourceType":"module"}