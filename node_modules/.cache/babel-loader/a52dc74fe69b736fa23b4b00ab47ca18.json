{"ast":null,"code":"\"use strict\";\n/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction isString(classValue) {\n  return typeof classValue === \"string\";\n}\n\nfunction isNonEmptyArray(classValue) {\n  return Array.isArray(classValue) && classValue.length > 0;\n}\n\nfunction isClassDictionary(classValue) {\n  return typeof classValue === \"object\";\n}\n\nfunction classNames() {\n  var classValues = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    classValues[_i] = arguments[_i];\n  }\n\n  var classes = [];\n\n  for (var i = 0; i < classValues.length; i++) {\n    var classValue = classValues[i];\n    if (!classValue) continue;\n\n    if (isString(classValue)) {\n      classes.push(classValue);\n    } else if (isNonEmptyArray(classValue)) {\n      var inner = classNames.apply(null, classValue);\n\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (isClassDictionary(classValue)) {\n      for (var key in classValue) {\n        if (classValue.hasOwnProperty(key) && classValue[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  }\n\n  return classes.join(\" \");\n}\n\nexports.classNames = classNames;","map":{"version":3,"sources":["/Users/jubi/fullStack/pro1/profile/node_modules/react-mde/lib/js/util/ClassNames.js"],"names":["Object","defineProperty","exports","value","isString","classValue","isNonEmptyArray","Array","isArray","length","isClassDictionary","classNames","classValues","_i","arguments","classes","i","push","inner","apply","key","hasOwnProperty","join"],"mappings":"AAAA;AACA;;;;;;AAKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,QAAT,CAAkBC,UAAlB,EAA8B;AAC1B,SAAO,OAAOA,UAAP,KAAsB,QAA7B;AACH;;AACD,SAASC,eAAT,CAAyBD,UAAzB,EAAqC;AACjC,SAAOE,KAAK,CAACC,OAAN,CAAcH,UAAd,KAA6BA,UAAU,CAACI,MAAX,GAAoB,CAAxD;AACH;;AACD,SAASC,iBAAT,CAA2BL,UAA3B,EAAuC;AACnC,SAAO,OAAOA,UAAP,KAAsB,QAA7B;AACH;;AACD,SAASM,UAAT,GAAsB;AAClB,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACL,MAAhC,EAAwCI,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,WAAW,CAACC,EAAD,CAAX,GAAkBC,SAAS,CAACD,EAAD,CAA3B;AACH;;AACD,MAAIE,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,WAAW,CAACH,MAAhC,EAAwCO,CAAC,EAAzC,EAA6C;AACzC,QAAIX,UAAU,GAAGO,WAAW,CAACI,CAAD,CAA5B;AACA,QAAI,CAACX,UAAL,EACI;;AACJ,QAAID,QAAQ,CAACC,UAAD,CAAZ,EAA0B;AACtBU,MAAAA,OAAO,CAACE,IAAR,CAAaZ,UAAb;AACH,KAFD,MAGK,IAAIC,eAAe,CAACD,UAAD,CAAnB,EAAiC;AAClC,UAAIa,KAAK,GAAGP,UAAU,CAACQ,KAAX,CAAiB,IAAjB,EAAuBd,UAAvB,CAAZ;;AACA,UAAIa,KAAJ,EAAW;AACPH,QAAAA,OAAO,CAACE,IAAR,CAAaC,KAAb;AACH;AACJ,KALI,MAMA,IAAIR,iBAAiB,CAACL,UAAD,CAArB,EAAmC;AACpC,WAAK,IAAIe,GAAT,IAAgBf,UAAhB,EAA4B;AACxB,YAAIA,UAAU,CAACgB,cAAX,CAA0BD,GAA1B,KAAkCf,UAAU,CAACe,GAAD,CAAhD,EAAuD;AACnDL,UAAAA,OAAO,CAACE,IAAR,CAAaG,GAAb;AACH;AACJ;AACJ;AACJ;;AACD,SAAOL,OAAO,CAACO,IAAR,CAAa,GAAb,CAAP;AACH;;AACDpB,OAAO,CAACS,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\n/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isString(classValue) {\n    return typeof classValue === \"string\";\n}\nfunction isNonEmptyArray(classValue) {\n    return Array.isArray(classValue) && classValue.length > 0;\n}\nfunction isClassDictionary(classValue) {\n    return typeof classValue === \"object\";\n}\nfunction classNames() {\n    var classValues = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        classValues[_i] = arguments[_i];\n    }\n    var classes = [];\n    for (var i = 0; i < classValues.length; i++) {\n        var classValue = classValues[i];\n        if (!classValue)\n            continue;\n        if (isString(classValue)) {\n            classes.push(classValue);\n        }\n        else if (isNonEmptyArray(classValue)) {\n            var inner = classNames.apply(null, classValue);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (isClassDictionary(classValue)) {\n            for (var key in classValue) {\n                if (classValue.hasOwnProperty(key) && classValue[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    }\n    return classes.join(\" \");\n}\nexports.classNames = classNames;\n"]},"metadata":{},"sourceType":"script"}