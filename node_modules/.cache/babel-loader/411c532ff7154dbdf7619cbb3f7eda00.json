{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/pro1/profile/src/page/blog/editor/edit.js\";\nimport React, { Component } from 'react';\nimport ReactMde from \"react-mde\";\nimport { Link } from \"react-router-dom\"; // import ReactDOM from \"react-dom\";\n\nimport * as Showdown from \"showdown\"; // import Auth from '../../../component/auth'\n\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport './editor.scss';\n\nfunction loadSuggestions(text) {\n  return new Promise((accept, reject) => {\n    setTimeout(() => {\n      const suggestions = [{\n        preview: \"Andre\",\n        value: \"@andre\"\n      }, {\n        preview: \"Angela\",\n        value: \"@angela\"\n      }, {\n        preview: \"David\",\n        value: \"@david\"\n      }, {\n        preview: \"Louise\",\n        value: \"@louise\"\n      }].filter(i => i.preview.toLowerCase().includes(text.toLowerCase()));\n      accept(suggestions);\n    }, 250);\n  });\n}\n\nconst converter = new Showdown.Converter({\n  tables: true,\n  simplifiedAutoLink: true,\n  strikethrough: true,\n  tasklists: true\n});\n\nfunction Editor1() {\n  // render() {\n  const [value, setValue] = React.useState(\"\");\n  const [selectedTab, setSelectedTab] = React.useState(\"write\"); // let show = false;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editor-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Title\",\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Categories(split by comma)\",\n    id: \"tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      background: '#FFC2C2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 34\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      // show = true;\n      // console(\"1\");\n      console.log(value);\n      const title = document.getElementById('title').value;\n      const tag = document.getElementById('tag').value;\n      console.log(title);\n      const apiUrl = 'https://profile-article-api.herokuapp.com';\n      const link = `${apiUrl}/article`;\n      const tags = tag.split(',');\n      console.log(tags);\n      const agr = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'title': title,\n          'content': value,\n          \"category\": tags\n        })\n      };\n      const res = fetch(link, agr);\n      res.then(res => res.json()).then(data => console.log(data));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Post\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactMde, {\n    value: value,\n    onChange: setValue,\n    selectedTab: selectedTab,\n    onTabChange: setSelectedTab,\n    generateMarkdownPreview: markdown => Promise.resolve(converter.makeHtml(markdown)),\n    loadSuggestions: loadSuggestions,\n    childProps: {\n      writeButton: {\n        tabIndex: -1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }))) // }</>\n  ; // }\n}\n\nexport default Editor1;","map":{"version":3,"sources":["/Users/jubi/fullStack/pro1/profile/src/page/blog/editor/edit.js"],"names":["React","Component","ReactMde","Link","Showdown","loadSuggestions","text","Promise","accept","reject","setTimeout","suggestions","preview","value","filter","i","toLowerCase","includes","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","Editor1","setValue","useState","selectedTab","setSelectedTab","background","console","log","title","document","getElementById","tag","apiUrl","link","tags","split","agr","method","headers","body","JSON","stringify","res","fetch","then","json","data","markdown","resolve","makeHtml","writeButton","tabIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B,C,CACA;;AACA,OAAO,4CAAP;AACA,OAAO,eAAP;;AACA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,SAAO,IAAIC,OAAJ,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;AACrCC,IAAAA,UAAU,CAAC,MAAM;AACf,YAAMC,WAAW,GAAG,CAClB;AACEC,QAAAA,OAAO,EAAE,OADX;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADkB,EAKlB;AACED,QAAAA,OAAO,EAAE,QADX;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALkB,EASlB;AACED,QAAAA,OAAO,EAAE,OADX;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATkB,EAalB;AACED,QAAAA,OAAO,EAAE,QADX;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAbkB,EAiBlBC,MAjBkB,CAiBXC,CAAC,IAAIA,CAAC,CAACH,OAAF,CAAUI,WAAV,GAAwBC,QAAxB,CAAiCX,IAAI,CAACU,WAAL,EAAjC,CAjBM,CAApB;AAkBAR,MAAAA,MAAM,CAACG,WAAD,CAAN;AACD,KApBS,EAoBP,GApBO,CAAV;AAqBD,GAtBM,CAAP;AAuBH;;AAED,MAAMO,SAAS,GAAG,IAAId,QAAQ,CAACe,SAAb,CAAuB;AACrCC,EAAAA,MAAM,EAAE,IAD6B;AAErCC,EAAAA,kBAAkB,EAAE,IAFiB;AAGrCC,EAAAA,aAAa,EAAE,IAHsB;AAIrCC,EAAAA,SAAS,EAAE;AAJ0B,CAAvB,CAAlB;;AAQA,SAASC,OAAT,GAAkB;AAEd;AACI,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBzB,KAAK,CAAC0B,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC5B,KAAK,CAAC0B,QAAN,CAAe,OAAf,CAAtC,CAJU,CAKV;;AACA,sBAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,WAAW,EAAC,OAAnB;AAA2B,IAAA,EAAE,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAO,IAAA,WAAW,EAAC,4BAAnB;AAAgD,IAAA,EAAE,EAAC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiB;AAAQ,IAAA,KAAK,EAAE;AAACG,MAAAA,UAAU,EAAC;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB,CAJJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAI;AACjB;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACA,YAAMmB,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCrB,KAA/C;AACA,YAAMsB,GAAG,GAAGF,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BrB,KAA3C;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,YAAMI,MAAM,GAAC,2CAAb;AACA,YAAMC,IAAI,GAAI,GAAED,MAAO,UAAvB;AACA,YAAME,IAAI,GAACH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAX;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,YAAME,GAAG,GAAG;AACRC,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,OAAO,EAAC;AACJ,0BAAgB;AADZ,SAFA;AAKRC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,mBAASb,KAAV;AAAiB,qBAAWnB,KAA5B;AAAkC,sBAAWyB;AAA7C,SAAf;AALE,OAAZ;AAOA,YAAMQ,GAAG,GAAGC,KAAK,CAACV,IAAD,EAAMG,GAAN,CAAjB;AACAM,MAAAA,GAAG,CAACE,IAAJ,CAASF,GAAG,IAAEA,GAAG,CAACG,IAAJ,EAAd,EAA0BD,IAA1B,CAA+BE,IAAI,IAAEpB,OAAO,CAACC,GAAR,CAAYmB,IAAZ,CAArC;AAEH,KArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,CADA,eA6BA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAErC,KADX;AAEI,IAAA,QAAQ,EAAEY,QAFd;AAGI,IAAA,WAAW,EAAEE,WAHjB;AAII,IAAA,WAAW,EAAEC,cAJjB;AAKI,IAAA,uBAAuB,EAAEuB,QAAQ,IACjC5C,OAAO,CAAC6C,OAAR,CAAgBlC,SAAS,CAACmC,QAAV,CAAmBF,QAAnB,CAAhB,CANJ;AAQI,IAAA,eAAe,EAAE9C,eARrB;AASI,IAAA,UAAU,EAAE;AACZiD,MAAAA,WAAW,EAAE;AACTC,QAAAA,QAAQ,EAAE,CAAC;AADF;AADD,KAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA7BA,CAFJ,CAiDA;AAjDA,GANU,CAyDd;AACH;;AACD,eAAe/B,OAAf","sourcesContent":["import React,{Component} from 'react';\nimport ReactMde from \"react-mde\";\nimport { Link } from \"react-router-dom\";\n// import ReactDOM from \"react-dom\";\nimport * as Showdown from \"showdown\";\n// import Auth from '../../../component/auth'\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport './editor.scss'\nfunction loadSuggestions(text) {\n    return new Promise((accept, reject) => {\n      setTimeout(() => {\n        const suggestions = [\n          {\n            preview: \"Andre\",\n            value: \"@andre\"\n          },\n          {\n            preview: \"Angela\",\n            value: \"@angela\"\n          },\n          {\n            preview: \"David\",\n            value: \"@david\"\n          },\n          {\n            preview: \"Louise\",\n            value: \"@louise\"\n          }\n        ].filter(i => i.preview.toLowerCase().includes(text.toLowerCase()));\n        accept(suggestions);\n      }, 250);\n    });\n}\n  \nconst converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n});\n\n\nfunction Editor1(){\n    \n    // render() {\n        const [value, setValue] = React.useState(\"\");\n        const [selectedTab, setSelectedTab] = React.useState(\"write\");\n        // let show = false;\n        return(\n            \n            <div className=\"editor\">\n            <div className=\"editor-header\">\n                {/* <span>Title</span> */}\n                <input placeholder=\"Title\" id='title'></input>\n                <input placeholder=\"Categories(split by comma)\" id='tag'></input>\n                <Link to=\"/blog\"><button style={{background:'#FFC2C2'}}>Cancel</button></Link>\n                <button onClick={()=>{\n                    // show = true;\n                    // console(\"1\");\n                    console.log(value)\n                    const title = document.getElementById('title').value\n                    const tag = document.getElementById('tag').value\n                    console.log(title)\n                    const apiUrl='https://profile-article-api.herokuapp.com';\n                    const link = `${apiUrl}/article`\n                    const tags=tag.split(',')\n                    console.log(tags)\n                    const agr = {\n                        method: 'POST',\n                        headers:{\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({'title': title, 'content': value,\"category\":tags})\n                    }\n                    const res = fetch(link,agr);\n                    res.then(res=>res.json()).then(data=>console.log(data))\n\n                }}>Post</button>\n            </div>\n            <div className=\"container\">\n                <ReactMde\n                    value={value}\n                    onChange={setValue}\n                    selectedTab={selectedTab}\n                    onTabChange={setSelectedTab}\n                    generateMarkdownPreview={markdown =>\n                    Promise.resolve(converter.makeHtml(markdown))\n                    }\n                    loadSuggestions={loadSuggestions}\n                    childProps={{\n                    writeButton: {\n                        tabIndex: -1\n                    }\n                    }}\n                />\n        </div>\n        </div>\n        // }</>\n        )\n    // }\n}\nexport default Editor1;"]},"metadata":{},"sourceType":"module"}