{"ast":null,"code":"var _jsxFileName = \"/Users/jubi/fullStack/pro1/profile/src/page/contact/form.js\";\nimport React from 'react'; // import MyEmail from './email'\n// import { renderEmail } from 'react-html-email'\n\nimport emailjs from 'emailjs-com';\nimport './contact.scss'; // const messageHtml =  renderEmail(<MyEmail name={this.state.name} />); \n\nexport default class Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedback: '',\n      name: '',\n      email: ''\n    };\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleChange3 = this.handleChange3.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // const messageHtml =  renderEmail(<MyEmail name={this.state.name} />);     \n      React.createElement(\"form\", {\n        className: \"test-mailing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mailing-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, \"\\uD83D\\uDC76\"), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.handleChange1,\n        placeholder: \"Full Name\",\n        value: this.state.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mailing-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, \"\\uD83D\\uDCE7\"), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.handleChange2,\n        placeholder: \"Email Address\",\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mailing-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, \"\\uD83D\\uDDE8\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        onChange: this.handleChange3,\n        placeholder: \"Message for Me\",\n        value: this.state.feedback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Submit\",\n        className: \"btn btn--submit\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }\n      }))\n    );\n  }\n\n  handleChange1(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleChange2(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleChange3(event) {\n    this.setState({\n      feedback: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const templateId = 'template_SuPmdfBi';\n    const name = this.state.name + '(From Email:' + this.state.email + \")\";\n    this.sendFeedback(templateId, {\n      message_html: this.state.feedback,\n      from_name: this.state.name,\n      from_email: this.state.email,\n      reply_to: \"jubi33717f@gmail.com\"\n    });\n  }\n\n  sendFeedback(templateId, variables) {\n    const userID = \"user_pMiF80loZQBp2KIqs9Qe9\";\n    emailjs.send('gmail', templateId, variables, userID).then(res => {\n      console.log('Email successfully sent!');\n      alert(\"Email successfully sent!\");\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n  }\n\n}","map":{"version":3,"sources":["/Users/jubi/fullStack/pro1/profile/src/page/contact/form.js"],"names":["React","emailjs","Form","Component","constructor","props","state","feedback","name","email","handleChange1","bind","handleChange2","handleChange3","handleSubmit","render","event","setState","target","value","templateId","sendFeedback","message_html","from_name","from_email","reply_to","variables","userID","send","then","res","console","log","alert","catch","err","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAO,gBAAP,C,CACA;;AACA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACpB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,IAAI,EAAE,EAAtB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAAb;AACG,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACH,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACE;;AAEDI,EAAAA,MAAM,GAAG;AACV;AAAA;AACO;AACL;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACO;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,QAAA,QAAQ,EAAE,KAAKL,aAAtB;AAAqC,QAAA,WAAW,EAAC,WAAjD;AAA6D,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADP,eAKO;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,QAAA,QAAQ,EAAE,KAAKI,aAAtB;AAAqC,QAAA,WAAW,EAAC,eAAjD;AAAiE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CALP,eASO;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAU,QAAA,QAAQ,EAAE,KAAKI,aAAzB;AAAwC,QAAA,WAAW,EAAC,gBAApD;AAAqE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CATP,CAHF,eA0BE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,SAAS,EAAC,iBAA9C;AAAgE,QAAA,OAAO,EAAE,KAAKO,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BF;AAFF;AA+BE;;AACDJ,EAAAA,aAAa,CAACM,KAAD,EAAQ;AACnB,SAAKC,QAAL,CAAc;AAACT,MAAAA,IAAI,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AAApB,KAAd;AACD;;AACDP,EAAAA,aAAa,CAACI,KAAD,EAAQ;AACnB,SAAKC,QAAL,CAAc;AAACR,MAAAA,KAAK,EAAEO,KAAK,CAACE,MAAN,CAAaC;AAArB,KAAd;AACD;;AACDN,EAAAA,aAAa,CAACG,KAAD,EAAQ;AACnB,SAAKC,QAAL,CAAc;AAACV,MAAAA,QAAQ,EAAES,KAAK,CAACE,MAAN,CAAaC;AAAxB,KAAd;AACD;;AAEDL,EAAAA,YAAY,CAAEE,KAAF,EAAS;AACtB,UAAMI,UAAU,GAAG,mBAAnB;AACG,UAAMZ,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAX,GAAgB,cAAhB,GAA+B,KAAKF,KAAL,CAAWG,KAA1C,GAAgD,GAA7D;AAEH,SAAKY,YAAL,CAAkBD,UAAlB,EAA8B;AAACE,MAAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWC,QAA1B;AAAoCgB,MAAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWE,IAA1D;AAAgEgB,MAAAA,UAAU,EAAC,KAAKlB,KAAL,CAAWG,KAAtF;AAA6FgB,MAAAA,QAAQ,EAAE;AAAvG,KAA9B;AACE;;AAEDJ,EAAAA,YAAY,CAAED,UAAF,EAAcM,SAAd,EAAyB;AACnC,UAAMC,MAAM,GAAE,4BAAd;AAEH1B,IAAAA,OAAO,CAAC2B,IAAR,CACE,OADF,EACWR,UADX,EACsBM,SADtB,EAEEC,MAFF,EAGIE,IAHJ,CAGSC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACJ,KANH,EAOE;AAPF,KAQGC,KARH,CAQSC,GAAG,IAAIJ,OAAO,CAACK,KAAR,CAAc,oEAAd,EAAoFD,GAApF,CARhB;AASE;;AAxE+C","sourcesContent":["import React from 'react';\n// import MyEmail from './email'\n// import { renderEmail } from 'react-html-email'\nimport emailjs from 'emailjs-com';\nimport './contact.scss'\n// const messageHtml =  renderEmail(<MyEmail name={this.state.name} />); \nexport default class Form extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.state = { feedback: '', name: '', email: '' };\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleChange3 = this.handleChange3.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n\treturn (\n        // const messageHtml =  renderEmail(<MyEmail name={this.state.name} />);     \n  \t<form className=\"test-mailing\">\n        {/* renderEmail(<MyEmail name={this.state.name} />);  */}\n    \t{/* <h1>Let's see if it works</h1> */}\n    \t<div>\n            <div className=\"mailing-box\">\n                <i>ðŸ‘¶</i>\n                <input onChange={this.handleChange1} placeholder=\"Full Name\" value={this.state.name}></input>\n            </div>\n            <div className=\"mailing-box\">\n                <i>ðŸ“§</i>\n                <input onChange={this.handleChange2} placeholder=\"Email Address\" value={this.state.email}></input>\n            </div>\n            <div className=\"mailing-box\">\n                <i>ðŸ—¨</i>\n                <textarea onChange={this.handleChange3} placeholder=\"Message for Me\" value={this.state.feedback}></textarea>\n            </div>\n      \t{/* <textarea\n        \tid=\"test-mailing\"\n        \tname=\"test-mailing\"\n        \tonChange={this.handleChange}\n        \tplaceholder=\"Post some lorem ipsum here\"\n        \trequired\n        \tvalue={this.state.feedback}\n        \tstyle={{width: '100%', height: '150px'}}\n      \t/> */}\n    \t</div>\n    \t<input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\n  \t</form>\n\t)\n  }\n  handleChange1(event) {\n    this.setState({name: event.target.value})\n  }\n  handleChange2(event) {\n    this.setState({email: event.target.value})\n  }\n  handleChange3(event) {\n    this.setState({feedback: event.target.value})\n  }\n\n  handleSubmit (event) {\n\tconst templateId = 'template_SuPmdfBi';\n    const name = this.state.name+'(From Email:'+this.state.email+\")\";\n    \n\tthis.sendFeedback(templateId, {message_html: this.state.feedback, from_name: this.state.name, from_email:this.state.email, reply_to: \"jubi33717f@gmail.com\"})\n  }\n\n  sendFeedback (templateId, variables) {\n    const userID= \"user_pMiF80loZQBp2KIqs9Qe9\";\n\n\temailjs.send(\n  \t'gmail', templateId,variables,\n  \tuserID\n  \t).then(res => {\n        console.log('Email successfully sent!')\n        alert(\"Email successfully sent!\")\n  \t})\n  \t// Handle errors here however you like, or use a React error boundary\n  \t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n}"]},"metadata":{},"sourceType":"module"}